#!/usr/bin/env bash 
# ======= tickle action plugin for Gina Trapani's todo.sh =======
# Adapted from (Tanja's tickler patch for todo.sh)[http://tanniespace.com/tickler-files-and-todosh/]
# Adapted as plugin by:  Braden Grams
# Adapted further by: Paul Mansfield <paul.mansfield@mansteck.co.uk>
# License: GPL, http://www.gnu.org/copyleft/gpl.html

usage() {
		echo "    $(basename "$0")"
		echo "      list all tickled items"
}

# check for usage and remove action
if [[ $1 = "usage" ]] || [[ $2 = "usage" ]]; then
	usage
	exit 0
elif [[ $1 = "listactions" ]]; then
	shift
fi

TODO_TMP_FILE="${TODO_TMP_FILE:-${TODO_DIR}/todo.tmp}"

# Head into tickler directory
mkdir -p "${TICKLER_DIR}" || exit 1
cd "${TICKLER_DIR}" || exit 1

# Find all the files i.e. number 1-31 with leading zero
# shellcheck disable=SC2061,SC2035
FILES=$(find . -type f ! -name *state.txt -name *[0123][0-9].txt)
# If we have no files exit
if [ -z "${FILES}" ]; then
	echo "    No tickled files"
	exit
fi

# For each file find its date
for file in ${FILES} ; do
	TYPE="$(echo "${file}" | awk -F '/' '{print $2}')"
	NUMBER="$(echo "${file}" | awk -F '/' '{print $3}')"
	YEAR=$(date +'%Y')
	if [ "${TYPE}" = "days" ] ; then
		MONTH=$(date +'%m')
		DAY=${NUMBER}
	else
		MONTH=${NUMBER}
		DAY="01"
	fi
	# Add date to start of each line
	# Months already gone this year are for next year
	if [ "${MONTH}" -lt "$(date +'%m')" ]; then    
		YEAR=$((YEAR+1))
	fi
	echo "${YEAR}-${MONTH}-${DAY} $(cat "${file}")" >> "${TODO_TMP_FILE}"
done
# Sort by date
sort -n "${TODO_TMP_FILE}"
rm -rf "${TODO_TMP_FILE}"