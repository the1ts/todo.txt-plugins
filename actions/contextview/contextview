#!/usr/bin/env bash
# shellcheck shell=bash
#===============================================================================
#
#          FILE: contextview
#
#         USAGE: todo.sh contextview
#
#   DESCRIPTION: 
#
#       OPTIONS: ---
#  REQUIREMENTS: ---
#          BUGS: ---
#         NOTES: todo.sh action
#        AUTHOR: Paul Mansfield (paul.manfield@mansteck.co.uk), 
#     COPYRIGHT: 2009-2019 Paul Mansfield
#       LICENSE: GPL, http://www.gnu.org/copyleft/gpl.html
#       CREATED: 19/09/09 10:42:45
#      REVISION:  ---
#===============================================================================

# Create action variable and move arguments up one
action=$1
shift

# Stop filter now and run in a controlled manner after the _list function is run
export TODOTXT_DISABLE_FILTER=1

[ "$action" = "usage" ] && {
	echo "    $(basename "$0") [TERM...]"
	echo "      Show todo items containing TERM, grouped by context, and displayed in"
	echo "      priority order. If no TERM provided, displays entire todo.txt."
	echo ""
	exit
}

# Show contexts in alphabetical order and todo items in priority  order
echo "===== Contexts ====="
echo ""

# Find all contexts and sort
CONTEXTS=$(grep -o '[^ ]*@[^ ]\+' "${TODO_FILE}" | grep '^@' | sort -u | sed 's/^@//g')

# For each context show header and the list of todo items
for i in ${CONTEXTS} ; do 
	# Use core _list function, does numbering and colouring for us
	CONTEXT_LIST=$(_list "$TODO_FILE" "@$i" "$@" | sed 's/\ *@[a-zA-Z0-9._\-]*\ */ /g')
	if [[ -n "${CONTEXT_LIST}" ]]; then
		echo "--- $i ---"
		echo "${CONTEXT_LIST}" | eval "${TODOTXT_FINAL_FILTER}"
		echo ""
	fi
done

# Show todo items not associated to a context
CONTEXT_LIST=$(_list "$TODO_FILE" "$@" | grep -v "@[[:alnum:]]*")
if [[ -n "${CONTEXT_LIST}" ]]; then
	echo "--- No context ---"
	echo "${CONTEXT_LIST}" | eval "${TODOTXT_FINAL_FILTER}"
fi

